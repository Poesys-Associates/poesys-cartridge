// license-header java merge-point
// Template: DbDtoProxy.vsl

## The concrete data-access data-transfer object (DTO) lazy-loading proxy
#set ($dto = $class.transformToDto(null))
package ${dto.packageName};


/**
 * <p>
 * A data-access layer proxy for the data-transfer object (DTO) for the 
 * ${dto.name}. This class is the concrete subclass of the generated abstract 
 * class. Make any changes to proxy behavior by overriding methods here rather 
 * than changing the abstract superclass; AndroMDA will overwrite that class 
 * when you run it but will never overwrite this concrete subclass.
 * </p>
${dto.documentation}
 * 
 * @author Poesys/DB Cartridge
 */
public#if (${dto.abstractClass}) abstract#end class ${dto.name}Proxy extends Abstract${dto.name}Proxy {
  /** Default serial version UID for the Serializable DTO */
  private static final long serialVersionUID = 1L;

  /**
   * <p>
   * Create a ${dto.name}Proxy as a new object. This constructor calls the abstract 
   * superclass constructor.
   * </p>
   *
   * @param dto the DTO to proxy
   */
  public ${dto.name}Proxy(${dto.name} dto) {
    super(dto); 
  }
}