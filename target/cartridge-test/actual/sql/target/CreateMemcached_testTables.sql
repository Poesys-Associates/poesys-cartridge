--
-- Copyright 2009 Poesys Associates. All rights reserved.
--
-- Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
-- Template: SubsystemAnsiSchemaTables.vsl

-- SQL schema for memcached_test subsystem

CREATE TABLE TestParent (
  testParentId NUMERIC NOT NULL, -- generated by sequence  
  parentOccupation VARCHAR(200),  
  CONSTRAINT TestParentPK PRIMARY KEY (testParentId)
);

CREATE TABLE TestB (
  b_id NUMERIC NOT NULL, -- generated by sequence  
  testAId NUMERIC NOT NULL,  
  CONSTRAINT TestBPK PRIMARY KEY (b_id)
);

CREATE TABLE Base (
  baseId NUMERIC NOT NULL, -- generated by sequence  
  baseString VARCHAR(200),  
  CONSTRAINT BasePK PRIMARY KEY (baseId)
);

CREATE TABLE Self4Self (
  parents4Parent INTEGER NOT NULL,  
  children4Child INTEGER NOT NULL,  
  parents4Parent INTEGER NOT NULL,  
  children4Child INTEGER NOT NULL,  
  CONSTRAINT Self4SelfPK PRIMARY KEY (parents4Parent, children4Child, parents4Parent, children4Child)
);

CREATE TABLE LeafB (
  baseId NUMERIC NOT NULL,  
  bString VARCHAR(200) NOT NULL,  
  CONSTRAINT LeafBPK PRIMARY KEY (baseId)
);

CREATE TABLE TestZ (
  testXId NUMERIC NOT NULL,  
  testYId NUMERIC NOT NULL,  
  zAttr VARCHAR(200),  
  CONSTRAINT TestZPK PRIMARY KEY (testXId, testYId)
);

CREATE TABLE TestAssociationChild (
  key1 INTEGER NOT NULL,  
  key2 INTEGER NOT NULL,  
  testXId NUMERIC NOT NULL,  
  testYId NUMERIC NOT NULL,  
  tsACAttr INTEGER,  
  CONSTRAINT TestAssociationChildPK PRIMARY KEY (key1, key2, testXId, testYId)
);

CREATE TABLE TC2TC2TC2TC (
  tc1DownChildNo NUMERIC NOT NULL,  
  tc1UpChildNo NUMERIC NOT NULL,  
  tc2DownChildNo NUMERIC NOT NULL,  
  tc2UpChildNo NUMERIC NOT NULL,  
  tc1DownTestParentId NUMERIC NOT NULL,  
  tc1UpTestParentId NUMERIC NOT NULL,  
  tc2DownTestParentId NUMERIC NOT NULL,  
  tc2UpTestParentId NUMERIC NOT NULL,  
  CONSTRAINT TC2TC2TC2TCPK PRIMARY KEY (tc1DownChildNo, tc1UpChildNo, tc2DownChildNo, tc2UpChildNo, tc1DownTestParentId, tc1UpTestParentId, tc2DownTestParentId, tc2UpTestParentId)
);

CREATE TABLE TestX (
  testXId NUMERIC NOT NULL, -- generated by sequence  
  xAttr VARCHAR(200),  
  CONSTRAINT TestXPK PRIMARY KEY (testXId)
);

CREATE TABLE Map (
  mapId NUMERIC NOT NULL, -- IDENTITY or AUTO_INCREMENT  
  location INTEGER NOT NULL,  
  CONSTRAINT MapPK PRIMARY KEY (mapId)
);

CREATE TABLE TestChildChild (
  childNo NUMERIC NOT NULL,  
  testParentId NUMERIC NOT NULL,  
  testChildChildId VARCHAR(200) NOT NULL,  
  CONSTRAINT TestChildChildPK PRIMARY KEY (childNo, testChildChildId, testParentId)
);

CREATE TABLE MapElement (
  tairObjectId NUMERIC NOT NULL,  
  mapId NUMERIC NOT NULL,  
  polyId NUMERIC NOT NULL,  
  elementType VARCHAR(200),  
  CONSTRAINT MapElementPK PRIMARY KEY (tairObjectId)
);

CREATE TABLE Self2Self (
  children2Self2Id NUMERIC NOT NULL,  
  parents2Self2Id NUMERIC NOT NULL,  
  CONSTRAINT Self2SelfPK PRIMARY KEY (children2Self2Id, parents2Self2Id)
);

CREATE TABLE LeafA (
  baseId NUMERIC NOT NULL,  
  aString VARCHAR(200),  
  CONSTRAINT LeafAPK PRIMARY KEY (baseId)
);

CREATE TABLE Child (
  testParentId NUMERIC NOT NULL,  
  childNo NUMERIC NOT NULL,  
  CONSTRAINT TestChildPK PRIMARY KEY (childNo, testParentId)
);

CREATE TABLE TestA (
  testAId NUMERIC NOT NULL, -- generated by sequence  
  CONSTRAINT TestAPK PRIMARY KEY (testAId)
);

CREATE TABLE TestNaturalKey (
  key1 VARCHAR(100) NOT NULL,  
  number1 NUMERIC(20),  
  number2 NUMERIC(15, 5),  
  CONSTRAINT TestNaturalKeyPK PRIMARY KEY (key1)
);

CREATE TABLE Middle (
  baseId NUMERIC NOT NULL,  
  middleString VARCHAR(200),  
  CONSTRAINT MiddlePK PRIMARY KEY (baseId)
);

CREATE TABLE TestExplicitKeyChild (
  testParentId NUMERIC NOT NULL,  
  explicitSubId INTEGER NOT NULL,  
  CONSTRAINT TestExplicitKeyChildPK PRIMARY KEY (explicitSubId, testParentId)
);

CREATE TABLE LeafC (
  baseId NUMERIC NOT NULL,  
  cString VARCHAR(200),  
  CONSTRAINT LeafCPK PRIMARY KEY (baseId)
);

CREATE TABLE Poly (
  polyId NUMERIC NOT NULL, -- IDENTITY or AUTO_INCREMENT  
  sequence VARCHAR(200) NOT NULL,  
  CONSTRAINT PolyPK PRIMARY KEY (polyId)
);

CREATE TABLE TestIdentityKey (
  testIdentityKeyId NUMERIC NOT NULL, -- IDENTITY or AUTO_INCREMENT  
  data1 VARCHAR(200),  
  CONSTRAINT TestIdentityKeyPK PRIMARY KEY (testIdentityKeyId)
);

CREATE TABLE ConcreteMiddle (
  baseId NUMERIC NOT NULL,  
  middleString VARCHAR(200),  
  CONSTRAINT ConcreteMiddlePK PRIMARY KEY (baseId)
);

CREATE TABLE Self4 (
  key1 INTEGER NOT NULL,  
  key2 INTEGER NOT NULL,  
  CONSTRAINT Self4PK PRIMARY KEY (key1, key2)
);

CREATE TABLE TestSequenceKey (
  testSequenceKeyId NUMERIC NOT NULL, -- generated by sequence  
  data1 VARCHAR(200),  
  CONSTRAINT TestSequenceKeyPK PRIMARY KEY (testSequenceKeyId)
);

CREATE TABLE TairObject (
  tairObjectId NUMERIC NOT NULL, -- IDENTITY or AUTO_INCREMENT  
  version INTEGER NOT NULL,  
  CONSTRAINT TairObjectPK PRIMARY KEY (tairObjectId)
);

CREATE TABLE Self2 (
  self2Id NUMERIC NOT NULL, -- generated by sequence  
  CONSTRAINT Self2PK PRIMARY KEY (self2Id)
);

CREATE TABLE TestNaturalParent (
  key1 INTEGER NOT NULL,  
  key2 INTEGER NOT NULL,  
  CONSTRAINT TestNaturalParentPK PRIMARY KEY (key1, key2)
);

CREATE TABLE TestChild2TestChild (
  downChildNo NUMERIC NOT NULL,  
  upChildNo NUMERIC NOT NULL,  
  downTestParentId NUMERIC NOT NULL,  
  upTestParentId NUMERIC NOT NULL,  
  CONSTRAINT TestChild2TestChildPK PRIMARY KEY (downChildNo, upChildNo, downTestParentId, upTestParentId)
);

CREATE TABLE TestNaturalChild (
  key1 INTEGER NOT NULL,  
  key2 INTEGER NOT NULL,  
  subkey INTEGER NOT NULL,  
  CONSTRAINT TestNaturalChildPK PRIMARY KEY (key1, key2, subkey)
);

CREATE TABLE TestY (
  testYId NUMERIC NOT NULL, -- generated by sequence  
  yAttr VARCHAR(200),  
  CONSTRAINT TestYPK PRIMARY KEY (testYId)
);

