/**
 * Copyright 2009 Poesys Associates. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: IDbDto.vsl

package com.poesys.db.test;

import com.poesys.db.dto.IDbDto;

import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;


/**
 * <p>
 * A data-access layer data-transfer-object interface for the Map. 
 * The data-transfer-object class and proxy class implement this interface, as
 * does the business-layer data-transfer-object class.
 * </p>
 * <p>
 * a map of objects to a genome
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>IdentityKey</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: true
 * </p>
 * 
 * @author Poesys/DB Cartridge
 */
public interface IMap extends IDbDto {

  boolean equals(Object arg0);

  int hashCode();

  /**
   * <p>
   * Mark any children of this DTO as deleted.
   * </p>
   *
   * @throws DtoStatusException when the child cannot be set to DELETED status
   */
  void markChildrenDeleted() throws DtoStatusException;

  IPrimaryKey getPrimaryKey();
  

  /**
   * <p>
   * Primary key attribute
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: ${property.prefix}
   * </p>
   * @return a java.math.BigInteger mapId
   */
  public java.math.BigInteger getMapId();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not true
// Read/Write property: false

  /**
   * 
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: location
   * </p>
   * @return a java.lang.Long location
   */
  public java.lang.Long getLocation();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the location.
   * </p>
   *
   * @param location the value to set into the location
   * @throws com.poesys.db.InvalidParametersException when the location 
   *       value is null
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setLocation(java.lang.Long location) throws com.poesys.db.dto.DtoStatusException, com.poesys.db.InvalidParametersException;


  /**
   * 
   * <p>
   * Added by TransformToProperty + AddToManyAssociationCollectionProperties
   * Owning DTO: Poly
   * Owning package: com.poesys.db.test
   * Property prefix: polys
   * </p>
   * @return a java.util.List<com.poesys.db.test.IPoly> polys
   */
  public java.util.List<com.poesys.db.test.IPoly> getPolys();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the polys.
   * </p>
   *
   * @param polys the value to set into the polys
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setPoly(java.util.List<com.poesys.db.test.IPoly> polys) throws com.poesys.db.dto.DtoStatusException;


  /**
   * <p>
   * Collection of association class objects (not the associated objects)
   * </p>
   * <p>
   * Added by AddAssociationClassCollectionProperties
   * Owning DTO: MapElement
   * Owning package: com.poesys.db.test
   * Property prefix: polys
   * </p>
   * @return a java.util.Collection<com.poesys.db.test.IMapElement> mapElement
   */
  public java.util.Collection<com.poesys.db.test.IMapElement> getMapElement();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the mapElement.
   * </p>
   *
   * @param mapElement the value to set into the mapElement
   * @throws com.poesys.db.InvalidParametersException when the mapElement 
   *       value is null
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setMapElement(java.util.Collection<com.poesys.db.test.IMapElement> mapElement) throws com.poesys.db.dto.DtoStatusException, com.poesys.db.InvalidParametersException;


  /**
   * Add a Poly object to the polys collection.
   *
   * @param object the object to add to the collection
   */
  public void addPolysPoly(com.poesys.db.test.IPoly object);

  /**
   * Add a MapElement object to the mapElement collection.
   *
   * @param object the object to add to the collection
   */
  public void addMapElementMapElement(com.poesys.db.test.IMapElement object);
}