/**
 * Copyright 2009 Poesys Associates. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractBsDto.vsl


package com.poesys.bs.test;


import com.poesys.bs.delegate.DelegateException;
import com.poesys.bs.dto.IDto;
import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;
import com.poesys.bs.dto.AbstractDto;


import com.poesys.db.test.ISelf4;
import com.poesys.db.test.Self4Proxy;
import com.poesys.db.test.Self4;


/**
 * <p>
 * A business layer data-transfer object (DTO) for the Self4. This class
 * is an abstract class that contains AndroMDA generated code; change nothing
 * in this class. Instead, override any methods in the concrete subclass
 * generated in the same package. AndroMDA will overwrite this class each time
 * you run it but will never overwrite the concrete subclass.
 * </p>
 * 
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>Immutable</li>
 *     <li>NaturalKey</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: true
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractBsSelf4 
    extends AbstractDto<com.poesys.db.test.ISelf4> {

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsSelf4 objects from a Collection parents4 of data-access-layer 
   * com.poesys.db.test.ISelf4 objects
   */
  private class BsParents4CollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<com.poesys.db.test.ISelf4, com.poesys.bs.test.BsSelf4> {
    @Override
    public com.poesys.bs.test.BsSelf4 get(com.poesys.db.test.ISelf4 dto) {
      return new com.poesys.bs.test.BsSelf4(dto);
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsSelf4 objects from a Collection children4 of data-access-layer 
   * com.poesys.db.test.ISelf4 objects
   */
  private class BsChildren4CollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<com.poesys.db.test.ISelf4, com.poesys.bs.test.BsSelf4> {
    @Override
    public com.poesys.bs.test.BsSelf4 get(com.poesys.db.test.ISelf4 dto) {
      return new com.poesys.bs.test.BsSelf4(dto);
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsSelf4Self objects from a Collection parents4Self4SelfLinks of data-access-layer 
   * com.poesys.db.test.ISelf4Self objects
   */
  private class BsParents4Self4SelfLinksCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<com.poesys.db.test.ISelf4Self, com.poesys.bs.test.BsSelf4Self> {
    @Override
    public com.poesys.bs.test.BsSelf4Self get(com.poesys.db.test.ISelf4Self dto) {
      return new com.poesys.bs.test.BsSelf4Self(dto);
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsSelf4Self objects from a Collection children4Self4SelfLinks of data-access-layer 
   * com.poesys.db.test.ISelf4Self objects
   */
  private class BsChildren4Self4SelfLinksCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<com.poesys.db.test.ISelf4Self, com.poesys.bs.test.BsSelf4Self> {
    @Override
    public com.poesys.bs.test.BsSelf4Self get(com.poesys.db.test.ISelf4Self dto) {
      return new com.poesys.bs.test.BsSelf4Self(dto);
    }
  }

  /**
   * Create a BsSelf4 object from a Self4 object.
   * 
   * @param dto the data-access layer Self4 DTO
   * @throws DelegateException when there is a problem creating the Self4
   */
  public AbstractBsSelf4(ISelf4 dto) throws DelegateException {
    super(dto);
  }

  /**
   * Create a Self4 from new data.
   *
   * @param key the primary key of the Self4
   * @param key1 
   * @param key2 
   */
  public AbstractBsSelf4(IPrimaryKey key, java.lang.Long key1, java.lang.Long key2) {
    super(new Self4Proxy(new Self4(key, key1, key2)));
  }

  @SuppressWarnings("unchecked")
  @Override
  public boolean equals(Object arg0) {
    // Unchecked cast here
    IDto<ISelf4> other = (IDto<ISelf4>)arg0;
    return dto.equals(other.toDto());
  }

  @Override
  public int hashCode() {
    return dto.hashCode();
  }

  public int compareTo(IDto<ISelf4> o) {
    return dto.compareTo(o.toDto());
  }

  public void markChildrenDeleted() throws DtoStatusException {
    dto.markChildrenDeleted();
  }
  
  public IPrimaryKey getPrimaryKey() {
    return dto.getPrimaryKey();
  }

  // Data member properties

  /**
   * 
   * <p>
   * Added by AddNaturalKeyProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Self4</li>
   * </ul>
   * </p>
   * @return a java.lang.Long key1
   */
  public java.lang.Long getKey1() {
    return dto.getKey1();
  }

  /**
   * 
   * <p>
   * Added by AddNaturalKeyProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Self4</li>
   * </ul>
   * </p>
   * @return a java.lang.Long key2
   */
  public java.lang.Long getKey2() {
    return dto.getKey2();
  }

  /**
   * 
   * <p>
   * Added by TransformToProperty + AddToManyAssociationCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Self4</li>
   * </ul>
   * </p>
   * @return a com.poesys.bs.test.BsSelf4 key2
   */
  public java.util.Collection<com.poesys.bs.test.BsSelf4> getParents4() {
    BsParents4CollectionBuilder builder = new BsParents4CollectionBuilder();
    return builder.getCollection(dto.getParents4());
  }

  /**
   * 
   * <p>
   * Added by TransformToProperty + AddToManyAssociationCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Self4</li>
   * </ul>
   * </p>
   * @return a com.poesys.bs.test.BsSelf4 key2
   */
  public java.util.Collection<com.poesys.bs.test.BsSelf4> getChildren4() {
    BsChildren4CollectionBuilder builder = new BsChildren4CollectionBuilder();
    return builder.getCollection(dto.getChildren4());
  }

  /**
   * <p>
   * Collection of association class objects (not the associated objects)
   * </p>
   * <p>
   * Added by AddAssociationClassCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Self4</li>
   * </ul>
   * </p>
   * @return a com.poesys.bs.test.BsSelf4Self key2
   */
  public java.util.Collection<com.poesys.bs.test.BsSelf4Self> getParents4Self4SelfLinks() {
    BsParents4Self4SelfLinksCollectionBuilder builder = new BsParents4Self4SelfLinksCollectionBuilder();
    return builder.getCollection(dto.getParents4Self4SelfLinks());
  }

  /**
   * <p>
   * Collection of association class objects (not the associated objects)
   * </p>
   * <p>
   * Added by AddAssociationClassCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Self4</li>
   * </ul>
   * </p>
   * @return a com.poesys.bs.test.BsSelf4Self key2
   */
  public java.util.Collection<com.poesys.bs.test.BsSelf4Self> getChildren4Self4SelfLinks() {
    BsChildren4Self4SelfLinksCollectionBuilder builder = new BsChildren4Self4SelfLinksCollectionBuilder();
    return builder.getCollection(dto.getChildren4Self4SelfLinks());
  }
}