/**
 * Copyright 2009 Poesys Associates. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractDbDtoProxy.vsl

package com.poesys.db.memcached_test;


import com.poesys.db.dto.AbstractLazyLoadingDtoProxy;


/**
 * <p>
 * A data-access layer data-transfer object (DTO) lazy-loading proxy for the 
 * MapElement. This class is an abstract class that contains AndroMDA 
 * generated code; change nothing in this class. Instead, override any methods 
 * in the concrete subclass generated in the same package. AndroMDA will 
 * overwrite this class each time you run it but will never overwrite the concrete subclass.
 * </p>
 * <p>
 * A polymorphism mapped to a genome map
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractMapElementProxy extends AbstractLazyLoadingDtoProxy implements IMapElement {
  /** Default serial version UID for the Serializable DTO */
  private static final long serialVersionUID = 1L;

  // Lazy-loading query setter strategy nested classes for single-object associations
  
  /**
   * Create a MapElementProxy. The concrete subclass must call this constructor.
   *
   * @param dto the DTO to proxy
   */
  public AbstractMapElementProxy(MapElement dto) {
    super(dto);

    // Setter arrays
    readObjectSetters = new java.util.concurrent.CopyOnWriteArrayList<com.poesys.db.dto.ISet>();
  }

  @Override
  public boolean equals(Object obj) {
    AbstractMapElementProxy otherProxy = (AbstractMapElementProxy)obj;
    return ((MapElement)dto).equals(otherProxy.dto);
  }

  @Override
  public int hashCode() {
    return ((MapElement)dto).hashCode();
  }
  // Inherited properties

  public java.math.BigInteger getTairObjectId() {
    return ((IMapElement)dto).getTairObjectId();
  }

  public java.lang.Integer getVersion() {
    return ((IMapElement)dto).getVersion();
  }

  /**
   * Set the property version.
   * 
   * @param version the value for the property
   * @throws com.poesys.db.InvalidParametersException when the property value is null
   */
  public void setVersion(java.lang.Integer version)
      throws com.poesys.db.InvalidParametersException {
    ((MapElement)dto).setVersion(version);
  }

  // Local properties (attributes, associations, and association classes)

  /**
   * Get an object of java.lang.String
   *
   * Source: AddLocalAttributeProperties
   * Lazy: false
   * 
   * @return a java.lang.String
   */
  public java.lang.String getElementType() {
    return ((MapElement)dto).getElementType();
  }

  public void setElementType(java.lang.String elementType)
      {
    ((MapElement)dto).setElementType(elementType);
  }

  /**
   * Get an object of com.poesys.db.memcached_test.IMap
   *
   * Source: AddAssociationObjectProperties
   * Lazy: false
   * 
   * @return a com.poesys.db.memcached_test.IMap
   */
  public com.poesys.db.memcached_test.IMap getMap() {
    return ((MapElement)dto).getMap();
  }

  /**
   * Get an object of com.poesys.db.memcached_test.IPoly
   *
   * Source: AddAssociationObjectProperties
   * Lazy: false
   * 
   * @return a com.poesys.db.memcached_test.IPoly
   */
  public com.poesys.db.memcached_test.IPoly getPoly() {
    return ((MapElement)dto).getPoly();
  }

  /**
   * Get an object of java.math.BigInteger
   *
   * Source: AddGeneratedKeyProperties + AddAssociationAttributeProperties
   * Lazy: false
   * 
   * @return a java.math.BigInteger
   */
  public java.math.BigInteger getMapId() {
    return ((MapElement)dto).getMapId();
  }

  /**
   * Get an object of java.math.BigInteger
   *
   * Source: AddGeneratedKeyProperties + AddAssociationAttributeProperties
   * Lazy: false
   * 
   * @return a java.math.BigInteger
   */
  public java.math.BigInteger getPolyId() {
    return ((MapElement)dto).getPolyId();
  }

  public void markChildrenDeleted() throws com.poesys.db.dto.DtoStatusException {
  	((MapElement)dto).markChildrenDeleted();
  }
}