/**
 * Copyright 2009 Poesys Associates. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractQuery.vsl

package com.poesys.db.test.sql;


import java.sql.ResultSet;
import java.sql.SQLException;

import com.poesys.db.dao.query.IKeyQuerySql;
import com.poesys.db.pk.IPrimaryKey;


/**
 * <p>
 * A query Command pattern object that implements a SQL key query for the 
 * ConcreteMiddle. This SQL specification contains a SQL statement that queries
 * a single ConcreteMiddle object from the database using the primary key.
 * </p>
 * 
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractQueryConcreteMiddle implements IKeyQuerySql<com.poesys.db.test.IConcreteMiddle> {
  /** SQL query statement for ConcreteMiddle */
  private static final String SQL =
    "SELECT Base.baseId, Base.baseString, ConcreteMiddle.middleString, LeafC.cString, CASE WHEN LeafC.baseId IS NOT NULL THEN 'LeafC' ELSE NULL END AS discriminant FROM ConcreteMiddle ConcreteMiddle JOIN Base Base ON ConcreteMiddle.baseId = Base.baseId LEFT OUTER JOIN LeafC LeafC ON ConcreteMiddle.baseId = LeafC.baseId WHERE ";

  public com.poesys.db.test.IConcreteMiddle getData(IPrimaryKey key, ResultSet rs) throws SQLException {
    // ConcreteMiddle has concrete subclasses, so the query returns an object of the actual
    // type rather than just of type ConcreteMiddle. It uses a discriminant expression
    // that the result set returns to figure out which class to instantiate.
    
    // Get the discriminant from the result set.
    String discriminant = rs.getString("discriminant");
    
    // Check whether the discriminant is null and throw exception.
    if (discriminant == null) {
      throw new com.poesys.bs.delegate.DelegateException("Missing subclass for queried object of superclass com.poesys.db.test.ConcreteMiddle");
    }
    
    com.poesys.db.test.IConcreteMiddle data = null;
    // Check for LeafC, set return only if not already set
    if (discriminant.equals("LeafC") && data == null) {
      // Use the test factory to get the data.
      data = com.poesys.db.test.TestFactory.getLeafCData(key, rs);
    }
    return data;
  }

  public String getSql(IPrimaryKey key) {
    return SQL + key.getSqlWhereExpression("ConcreteMiddle");
  }
}