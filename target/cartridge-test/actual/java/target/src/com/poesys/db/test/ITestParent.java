/**
 * Copyright 2009 Poesys Associates. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: IDbDto.vsl

package com.poesys.db.test;

import com.poesys.db.dto.IDbDto;

import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;


/**
 * <p>
 * A data-access layer data-transfer-object interface for the TestParent. 
 * The data-transfer-object class and proxy class implement this interface, as
 * does the business-layer data-transfer-object class.
 * </p>
 * 
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>Persistent</li>
 *     <li>SequenceKey</li>
 * </ul>
 * <p>
 * Class is read/write: true
 * </p>
 * 
 * @author Poesys/DB Cartridge
 */
public interface ITestParent extends IDbDto {

  boolean equals(Object arg0);

  int hashCode();

  /**
   * <p>
   * Mark any children of this DTO as deleted.
   * </p>
   *
   * @throws DtoStatusException when the child cannot be set to DELETED status
   */
  void markChildrenDeleted() throws DtoStatusException;

  IPrimaryKey getPrimaryKey();
  

  /**
   * <p>
   * Primary key attribute
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: ${property.prefix}
   * </p>
   * @return a java.math.BigInteger testParentId
   */
  public java.math.BigInteger getTestParentId();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not true
// Read/Write property: false

  /**
   * 
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: parentOccupation
   * </p>
   * @return a java.lang.String parentOccupation
   */
  public java.lang.String getParentOccupation();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the parentOccupation.
   * </p>
   *
   * @param parentOccupation the value to set into the parentOccupation
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setParentOccupation(java.lang.String parentOccupation) throws com.poesys.db.dto.DtoStatusException;


  /**
   * <p>
   * The test child of the test parent
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: TestChild
   * Owning package: com.poesys.db.test
   * Property prefix: children
   * </p>
   * @return a java.util.List<com.poesys.db.test.ITestChild> children
   */
  public java.util.List<com.poesys.db.test.ITestChild> getChildren();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not true
// Read/Write property: true

  /**
   * <p>
   * The child with an explicit key
   * </p>
   * <p>
   * Added by AddToManyChildCollectionProperties
   * Owning DTO: TestExplicitKeyChild
   * Owning package: com.poesys.db.test
   * Property prefix: explicitChildren
   * </p>
   * @return a java.util.Collection<com.poesys.db.test.ITestExplicitKeyChild> explicitChildren
   */
  public java.util.Collection<com.poesys.db.test.ITestExplicitKeyChild> getExplicitChildren();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not true
// Read/Write property: true

  /**
   * Add a TestChild object to the children collection.
   *
   * @param object the object to add to the collection
   */
  public void addChildrenTestChild(com.poesys.db.test.ITestChild object);

  /**
   * Add a TestExplicitKeyChild object to the explicitChildren collection.
   *
   * @param object the object to add to the collection
   */
  public void addExplicitChildrenTestExplicitKeyChild(com.poesys.db.test.ITestExplicitKeyChild object);
}