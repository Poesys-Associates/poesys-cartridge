/**
 * Copyright 2009 Poesys Associates. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractBsDto.vsl


package com.poesys.bs.test;


import com.poesys.bs.delegate.DelegateException;
import com.poesys.bs.dto.IDto;
import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;
import com.poesys.bs.dto.AbstractDto;


import com.poesys.db.test.ITestNaturalParent;
import com.poesys.db.test.TestNaturalParentProxy;
import com.poesys.db.test.TestNaturalParent;


/**
 * <p>
 * A business layer data-transfer object (DTO) for the TestNaturalParent. This class
 * is an abstract class that contains AndroMDA generated code; change nothing
 * in this class. Instead, override any methods in the concrete subclass
 * generated in the same package. AndroMDA will overwrite this class each time
 * you run it but will never overwrite the concrete subclass.
 * </p>
 * 
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>Immutable</li>
 *     <li>NaturalKey</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: true
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractBsTestNaturalParent 
    extends AbstractDto<com.poesys.db.test.ITestNaturalParent> {

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsTestNaturalChild objects from a Collection children of data-access-layer 
   * com.poesys.db.test.ITestNaturalChild objects
   */
  private class BsChildrenCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<com.poesys.db.test.ITestNaturalChild, com.poesys.bs.test.BsTestNaturalChild> {
    @Override
    public com.poesys.bs.test.BsTestNaturalChild get(com.poesys.db.test.ITestNaturalChild dto) {
      return new com.poesys.bs.test.BsTestNaturalChild(dto);
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsTestAssociationChild objects from a Collection assocChildren of data-access-layer 
   * com.poesys.db.test.ITestAssociationChild objects
   */
  private class BsAssocChildrenCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<com.poesys.db.test.ITestAssociationChild, com.poesys.bs.test.BsTestAssociationChild> {
    @Override
    public com.poesys.bs.test.BsTestAssociationChild get(com.poesys.db.test.ITestAssociationChild dto) {
      return new com.poesys.bs.test.BsTestAssociationChild(dto);
    }
  }

  /**
   * Create a BsTestNaturalParent object from a TestNaturalParent object.
   * 
   * @param dto the data-access layer TestNaturalParent DTO
   * @throws DelegateException when there is a problem creating the TestNaturalParent
   */
  public AbstractBsTestNaturalParent(ITestNaturalParent dto) throws DelegateException {
    super(dto);
  }

  /**
   * Create a TestNaturalParent from new data.
   *
   * @param key the primary key of the TestNaturalParent
   * @param key1 
   * @param key2 
   */
  public AbstractBsTestNaturalParent(IPrimaryKey key, java.lang.Long key1, java.lang.Long key2) {
    super(new TestNaturalParentProxy(new TestNaturalParent(key, key1, key2)));
  }

  @SuppressWarnings("unchecked")
  @Override
  public boolean equals(Object arg0) {
    // Unchecked cast here
    IDto<ITestNaturalParent> other = (IDto<ITestNaturalParent>)arg0;
    return dto.equals(other.toDto());
  }

  @Override
  public int hashCode() {
    return dto.hashCode();
  }

  public int compareTo(IDto<ITestNaturalParent> o) {
    return dto.compareTo(o.toDto());
  }

  public void markChildrenDeleted() throws DtoStatusException {
    dto.markChildrenDeleted();
  }
  
  public IPrimaryKey getPrimaryKey() {
    return dto.getPrimaryKey();
  }

  // Data member properties

  /**
   * 
   * <p>
   * Added by AddNaturalKeyProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object TestNaturalParent</li>
   * </ul>
   * </p>
   * @return a java.lang.Long key1
   */
  public java.lang.Long getKey1() {
    return dto.getKey1();
  }

  /**
   * 
   * <p>
   * Added by AddNaturalKeyProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object TestNaturalParent</li>
   * </ul>
   * </p>
   * @return a java.lang.Long key2
   */
  public java.lang.Long getKey2() {
    return dto.getKey2();
  }

  /**
   * 
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object TestNaturalParent</li>
   * </ul>
   * </p>
   * @return a com.poesys.bs.test.BsTestNaturalChild key2
   */
  public java.util.Collection<com.poesys.bs.test.BsTestNaturalChild> getChildren() {
    BsChildrenCollectionBuilder builder = new BsChildrenCollectionBuilder();
    return builder.getCollection(dto.getChildren());
  }

  /**
   * 
   * <p>
   * Added by AddToManyChildCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object TestNaturalParent</li>
   * </ul>
   * </p>
   * @return a com.poesys.bs.test.BsTestAssociationChild key2
   */
  public java.util.Collection<com.poesys.bs.test.BsTestAssociationChild> getAssocChildren() {
    BsAssocChildrenCollectionBuilder builder = new BsAssocChildrenCollectionBuilder();
    return builder.getCollection(dto.getAssocChildren());
  }
}