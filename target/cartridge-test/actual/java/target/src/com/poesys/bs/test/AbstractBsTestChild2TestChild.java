/**
 * Copyright 2009 Poesys Associates. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractBsDto.vsl


package com.poesys.bs.test;


import com.poesys.bs.delegate.DelegateException;
import com.poesys.bs.dto.IDto;
import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;
import com.poesys.bs.dto.AbstractDto;


import com.poesys.db.test.ITestChild2TestChild;
import com.poesys.db.test.TestChild2TestChildProxy;
import com.poesys.db.test.TestChild2TestChild;


/**
 * <p>
 * A business layer data-transfer object (DTO) for the TestChild2TestChild. This class
 * is an abstract class that contains AndroMDA generated code; change nothing
 * in this class. Instead, override any methods in the concrete subclass
 * generated in the same package. AndroMDA will overwrite this class each time
 * you run it but will never overwrite the concrete subclass.
 * </p>
 * 
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>AssociationKey</li>
 *     <li>Immutable</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: true
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractBsTestChild2TestChild 
    extends AbstractDto<com.poesys.db.test.ITestChild2TestChild> {

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsTestChild2TestChild objects from a Collection tc1 of data-access-layer 
   * com.poesys.db.test.ITestChild2TestChild objects
   */
  private class BsTc1CollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<com.poesys.db.test.ITestChild2TestChild, com.poesys.bs.test.BsTestChild2TestChild> {
    @Override
    public com.poesys.bs.test.BsTestChild2TestChild get(com.poesys.db.test.ITestChild2TestChild dto) {
      return new com.poesys.bs.test.BsTestChild2TestChild(dto);
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsTestChild2TestChild objects from a Collection tc2 of data-access-layer 
   * com.poesys.db.test.ITestChild2TestChild objects
   */
  private class BsTc2CollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<com.poesys.db.test.ITestChild2TestChild, com.poesys.bs.test.BsTestChild2TestChild> {
    @Override
    public com.poesys.bs.test.BsTestChild2TestChild get(com.poesys.db.test.ITestChild2TestChild dto) {
      return new com.poesys.bs.test.BsTestChild2TestChild(dto);
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsTC2TC2TC2TC objects from a Collection tc1TC2TC2TC2TCLinks of data-access-layer 
   * com.poesys.db.test.ITC2TC2TC2TC objects
   */
  private class BsTc1TC2TC2TC2TCLinksCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<com.poesys.db.test.ITC2TC2TC2TC, com.poesys.bs.test.BsTC2TC2TC2TC> {
    @Override
    public com.poesys.bs.test.BsTC2TC2TC2TC get(com.poesys.db.test.ITC2TC2TC2TC dto) {
      return new com.poesys.bs.test.BsTC2TC2TC2TC(dto);
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsTC2TC2TC2TC objects from a Collection tc2TC2TC2TC2TCLinks of data-access-layer 
   * com.poesys.db.test.ITC2TC2TC2TC objects
   */
  private class BsTc2TC2TC2TC2TCLinksCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<com.poesys.db.test.ITC2TC2TC2TC, com.poesys.bs.test.BsTC2TC2TC2TC> {
    @Override
    public com.poesys.bs.test.BsTC2TC2TC2TC get(com.poesys.db.test.ITC2TC2TC2TC dto) {
      return new com.poesys.bs.test.BsTC2TC2TC2TC(dto);
    }
  }

  /**
   * Create a BsTestChild2TestChild object from a TestChild2TestChild object.
   * 
   * @param dto the data-access layer TestChild2TestChild DTO
   * @throws DelegateException when there is a problem creating the TestChild2TestChild
   */
  public AbstractBsTestChild2TestChild(ITestChild2TestChild dto) throws DelegateException {
    super(dto);
  }

  /**
   * Create a TestChild2TestChild from new data.
   *
   * @param key the primary key of the TestChild2TestChild
   * @param downObject associated TestChild object
   * @param upObject associated TestChild object
   * @param downChildNo Attribute that is part of the association key
   * @param upChildNo Attribute that is part of the association key
   * @param downTestParentId Attribute that is part of the association key
   * @param upTestParentId Attribute that is part of the association key
   */
  public AbstractBsTestChild2TestChild(IPrimaryKey key, com.poesys.db.test.ITestChild downObject, com.poesys.db.test.ITestChild upObject, java.math.BigInteger downChildNo, java.math.BigInteger upChildNo, java.math.BigInteger downTestParentId, java.math.BigInteger upTestParentId) {
    super(new TestChild2TestChildProxy(new TestChild2TestChild(key, downObject, upObject, downChildNo, upChildNo, downTestParentId, upTestParentId)));
  }

  @SuppressWarnings("unchecked")
  @Override
  public boolean equals(Object arg0) {
    // Unchecked cast here
    IDto<ITestChild2TestChild> other = (IDto<ITestChild2TestChild>)arg0;
    return dto.equals(other.toDto());
  }

  @Override
  public int hashCode() {
    return dto.hashCode();
  }

  public int compareTo(IDto<ITestChild2TestChild> o) {
    return dto.compareTo(o.toDto());
  }

  public void markChildrenDeleted() throws DtoStatusException {
    dto.markChildrenDeleted();
  }
  
  public IPrimaryKey getPrimaryKey() {
    return dto.getPrimaryKey();
  }

  // Data member properties

  /**
   * 
   * <p>
   * Added by TransformToProperty + AddToManyAssociationCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object TestChild2TestChild</li>
   * </ul>
   * </p>
   * @return a com.poesys.bs.test.BsTestChild2TestChild tc2TC2TC2TC2TCLinks
   */
  public java.util.Collection<com.poesys.bs.test.BsTestChild2TestChild> getTc1() {
    BsTc1CollectionBuilder builder = new BsTc1CollectionBuilder();
    return builder.getCollection(dto.getTc1());
  }

  /**
   * 
   * <p>
   * Added by TransformToProperty + AddToManyAssociationCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object TestChild2TestChild</li>
   * </ul>
   * </p>
   * @return a com.poesys.bs.test.BsTestChild2TestChild tc2TC2TC2TC2TCLinks
   */
  public java.util.Collection<com.poesys.bs.test.BsTestChild2TestChild> getTc2() {
    BsTc2CollectionBuilder builder = new BsTc2CollectionBuilder();
    return builder.getCollection(dto.getTc2());
  }

  /**
   * <p>
   * Collection of association class objects (not the associated objects)
   * </p>
   * <p>
   * Added by AddAssociationClassCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object TestChild2TestChild</li>
   * </ul>
   * </p>
   * @return a com.poesys.bs.test.BsTC2TC2TC2TC tc2TC2TC2TC2TCLinks
   */
  public java.util.Collection<com.poesys.bs.test.BsTC2TC2TC2TC> getTc1TC2TC2TC2TCLinks() {
    BsTc1TC2TC2TC2TCLinksCollectionBuilder builder = new BsTc1TC2TC2TC2TCLinksCollectionBuilder();
    return builder.getCollection(dto.getTc1TC2TC2TC2TCLinks());
  }

  /**
   * <p>
   * Collection of association class objects (not the associated objects)
   * </p>
   * <p>
   * Added by AddAssociationClassCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object TestChild2TestChild</li>
   * </ul>
   * </p>
   * @return a com.poesys.bs.test.BsTC2TC2TC2TC tc2TC2TC2TC2TCLinks
   */
  public java.util.Collection<com.poesys.bs.test.BsTC2TC2TC2TC> getTc2TC2TC2TC2TCLinks() {
    BsTc2TC2TC2TC2TCLinksCollectionBuilder builder = new BsTc2TC2TC2TC2TCLinksCollectionBuilder();
    return builder.getCollection(dto.getTc2TC2TC2TC2TCLinks());
  }

  /**
   * <p>
   * Associated object
   * </p>
   * <p>
   * Added by AddAssociationKeyObjectProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object TestChild2TestChild</li>
   * </ul>
   * </p>
   * @return a com.poesys.bs.test.BsTestChild up
   */
  public com.poesys.bs.test.BsTestChild getUp() {
    // Return 4
    return new com.poesys.bs.test.BsTestChild(dto.getUp());
  }

  /**
   * <p>
   * Associated object
   * </p>
   * <p>
   * Added by AddAssociationKeyObjectProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object TestChild2TestChild</li>
   * </ul>
   * </p>
   * @return a com.poesys.bs.test.BsTestChild down
   */
  public com.poesys.bs.test.BsTestChild getDown() {
    // Return 4
    return new com.poesys.bs.test.BsTestChild(dto.getDown());
  }

  /**
   * <p>
   * Attribute that is part of the association key
   * </p>
   * <p>
   * Added by AddOrderedSubKeyProperties + AddAssociationKeyAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object TestChild2TestChild</li>
   * </ul>
   * </p>
   * @return a java.math.BigInteger downChildNo
   */
  public java.math.BigInteger getDownChildNo() {
    return dto.getDownChildNo();
  }

  /**
   * <p>
   * Attribute that is part of the association key
   * </p>
   * <p>
   * Added by AddOrderedSubKeyProperties + AddAssociationKeyAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object TestChild2TestChild</li>
   * </ul>
   * </p>
   * @return a java.math.BigInteger upChildNo
   */
  public java.math.BigInteger getUpChildNo() {
    return dto.getUpChildNo();
  }

  /**
   * <p>
   * Attribute that is part of the association key
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties + AddParentKeyAttributes + AddAssociationKeyAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object TestChild2TestChild</li>
   * </ul>
   * </p>
   * @return a java.math.BigInteger downTestParentId
   */
  public java.math.BigInteger getDownTestParentId() {
    return dto.getDownTestParentId();
  }

  /**
   * <p>
   * Attribute that is part of the association key
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties + AddParentKeyAttributes + AddAssociationKeyAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object TestChild2TestChild</li>
   * </ul>
   * </p>
   * @return a java.math.BigInteger upTestParentId
   */
  public java.math.BigInteger getUpTestParentId() {
    return dto.getUpTestParentId();
  }
}