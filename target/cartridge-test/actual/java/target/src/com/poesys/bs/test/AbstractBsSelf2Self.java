/**
 * Copyright 2009 Poesys Associates. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractBsDto.vsl


package com.poesys.bs.test;


import com.poesys.bs.delegate.DelegateException;
import com.poesys.bs.dto.IDto;
import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;
import com.poesys.bs.dto.AbstractDto;


import com.poesys.db.test.ISelf2Self;
import com.poesys.db.test.Self2SelfProxy;
import com.poesys.db.test.Self2Self;


/**
 * <p>
 * A business layer data-transfer object (DTO) for the Self2Self. This class
 * is an abstract class that contains AndroMDA generated code; change nothing
 * in this class. Instead, override any methods in the concrete subclass
 * generated in the same package. AndroMDA will overwrite this class each time
 * you run it but will never overwrite the concrete subclass.
 * </p>
 * 
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>AssociationKey</li>
 *     <li>Immutable</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: true
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractBsSelf2Self 
    extends AbstractDto<com.poesys.db.test.ISelf2Self> {

  /**
   * Create a BsSelf2Self object from a Self2Self object.
   * 
   * @param dto the data-access layer Self2Self DTO
   * @throws DelegateException when there is a problem creating the Self2Self
   */
  public AbstractBsSelf2Self(ISelf2Self dto) throws DelegateException {
    super(dto);
  }

  /**
   * Create a Self2Self from new data.
   *
   * @param key the primary key of the Self2Self
   * @param children2Object associated Self2 object
   * @param parents2Object associated Self2 object
   * @param children2Self2Id Attribute that is part of the association key
   * @param parents2Self2Id Attribute that is part of the association key
   */
  public AbstractBsSelf2Self(IPrimaryKey key, com.poesys.db.test.ISelf2 children2Object, com.poesys.db.test.ISelf2 parents2Object, java.math.BigInteger children2Self2Id, java.math.BigInteger parents2Self2Id) {
    super(new Self2SelfProxy(new Self2Self(key, children2Object, parents2Object, children2Self2Id, parents2Self2Id)));
  }

  @SuppressWarnings("unchecked")
  @Override
  public boolean equals(Object arg0) {
    // Unchecked cast here
    IDto<ISelf2Self> other = (IDto<ISelf2Self>)arg0;
    return dto.equals(other.toDto());
  }

  @Override
  public int hashCode() {
    return dto.hashCode();
  }

  public int compareTo(IDto<ISelf2Self> o) {
    return dto.compareTo(o.toDto());
  }

  public void markChildrenDeleted() throws DtoStatusException {
    dto.markChildrenDeleted();
  }
  
  public IPrimaryKey getPrimaryKey() {
    return dto.getPrimaryKey();
  }

  // Data member properties

  /**
   * <p>
   * Associated object
   * </p>
   * <p>
   * Added by AddAssociationKeyObjectProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Self2Self</li>
   * </ul>
   * </p>
   * @return a com.poesys.bs.test.BsSelf2 parents2
   */
  public com.poesys.bs.test.BsSelf2 getParents2() {
    // Return 4
    return new com.poesys.bs.test.BsSelf2(dto.getParents2());
  }

  /**
   * <p>
   * Associated object
   * </p>
   * <p>
   * Added by AddAssociationKeyObjectProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Self2Self</li>
   * </ul>
   * </p>
   * @return a com.poesys.bs.test.BsSelf2 children2
   */
  public com.poesys.bs.test.BsSelf2 getChildren2() {
    // Return 4
    return new com.poesys.bs.test.BsSelf2(dto.getChildren2());
  }

  /**
   * <p>
   * Attribute that is part of the association key
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties + AddAssociationKeyAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Self2Self</li>
   * </ul>
   * </p>
   * @return a java.math.BigInteger children2Self2Id
   */
  public java.math.BigInteger getChildren2Self2Id() {
    return dto.getChildren2Self2Id();
  }

  /**
   * <p>
   * Attribute that is part of the association key
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties + AddAssociationKeyAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Self2Self</li>
   * </ul>
   * </p>
   * @return a java.math.BigInteger parents2Self2Id
   */
  public java.math.BigInteger getParents2Self2Id() {
    return dto.getParents2Self2Id();
  }
}