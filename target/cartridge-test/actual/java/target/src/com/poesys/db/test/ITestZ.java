/**
 * Copyright 2009 Poesys Associates. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: IDbDto.vsl

package com.poesys.db.test;

import com.poesys.db.dto.IDbDto;

import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;


/**
 * <p>
 * A data-access layer data-transfer-object interface for the TestZ. 
 * The data-transfer-object class and proxy class implement this interface, as
 * does the business-layer data-transfer-object class.
 * </p>
 * <p>
 * The TestZ object is the assocation class that represents the many-to-many
 * association of TestX and TestY objects.
 * </p>
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>AssociationKey</li>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: true
 * </p>
 * 
 * @author Poesys/DB Cartridge
 */
public interface ITestZ extends IDbDto {

  boolean equals(Object arg0);

  int hashCode();

  /**
   * <p>
   * Mark any children of this DTO as deleted.
   * </p>
   *
   * @throws DtoStatusException when the child cannot be set to DELETED status
   */
  void markChildrenDeleted() throws DtoStatusException;

  IPrimaryKey getPrimaryKey();
  

  /**
   * 
   * <p>
   * Added by AddLocalAttributeProperties
   * Owning DTO: ${property.dto.name}
   * Owning package: ${property.dto.packageName}
   * Property prefix: zAttr
   * </p>
   * @return a java.lang.String zAttr
   */
  public java.lang.String getZAttr();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the zAttr.
   * </p>
   *
   * @param zAttr the value to set into the zAttr
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setZAttr(java.lang.String zAttr) throws com.poesys.db.dto.DtoStatusException;


  /**
   * 
   * <p>
   * Added by AddToManyAssociatedKeyCollectionProperties
   * Owning DTO: TestAssociationChild
   * Owning package: com.poesys.db.test
   * Property prefix: tests
   * </p>
   * @return a java.util.Collection<com.poesys.db.test.ITestAssociationChild> tests
   */
  public java.util.Collection<com.poesys.db.test.ITestAssociationChild> getTests();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the tests.
   * </p>
   *
   * @param tests the value to set into the tests
   * @throws com.poesys.db.dto.DtoStatusException when the status cannot be set to CHANGED
   */
  public void setTests(java.util.Collection<com.poesys.db.test.ITestAssociationChild> tests) throws com.poesys.db.dto.DtoStatusException;


  /**
   * <p>
   * Associated object
   * </p>
   * <p>
   * Added by AddAssociationKeyObjectProperties
   * Owning DTO: TestY
   * Owning package: com.poesys.db.test
   * Property prefix: ys
   * </p>
   * <p>
   * This property loads lazily on demand rather than when you first query the 
   * ITestZ object.
   * </p>
   * @return a com.poesys.db.test.ITestY y
   * @throws java.sql.SQLException when the method can't get a SQL connection to 
   *                               load the property lazily
   */
  public com.poesys.db.test.ITestY getY() throws java.sql.SQLException;

  /**
   * Clear the y so that it will lazily reload.
   */
  public void clearY();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not true
// Read/Write property: false

  /**
   * <p>
   * Associated object
   * </p>
   * <p>
   * Added by AddAssociationKeyObjectProperties
   * Owning DTO: TestX
   * Owning package: com.poesys.db.test
   * Property prefix: xs
   * </p>
   * @return a com.poesys.db.test.ITestX x
   */
  public com.poesys.db.test.ITestX getX();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not true
// Read/Write property: false

  /**
   * <p>
   * Attribute that is part of the association key
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties + AddAssociationKeyAttributeProperties
   * Owning DTO: TestX
   * Owning package: com.poesys.db.test
   * Property prefix: xs
   * </p>
   * @return a java.math.BigInteger testXId
   */
  public java.math.BigInteger getTestXId();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not true
// Read/Write property: false

  /**
   * <p>
   * Attribute that is part of the association key
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties + AddAssociationKeyAttributeProperties
   * Owning DTO: TestY
   * Owning package: com.poesys.db.test
   * Property prefix: ys
   * </p>
   * @return a java.math.BigInteger testYId
   */
  public java.math.BigInteger getTestYId();
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not true
// Read/Write property: false

  /**
   * Add a TestAssociationChild object to the tests collection.
   *
   * @param object the object to add to the collection
   */
  public void addTestsTestAssociationChild(com.poesys.db.test.ITestAssociationChild object);
}