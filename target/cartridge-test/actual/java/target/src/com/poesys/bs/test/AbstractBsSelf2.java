/**
 * Copyright 2009 Poesys Associates. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractBsDto.vsl


package com.poesys.bs.test;


import com.poesys.bs.delegate.DelegateException;
import com.poesys.bs.dto.IDto;
import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;
import com.poesys.bs.dto.AbstractDto;


import com.poesys.db.test.ISelf2;
import com.poesys.db.test.Self2Proxy;
import com.poesys.db.test.Self2;


/**
 * <p>
 * A business layer data-transfer object (DTO) for the Self2. This class
 * is an abstract class that contains AndroMDA generated code; change nothing
 * in this class. Instead, override any methods in the concrete subclass
 * generated in the same package. AndroMDA will overwrite this class each time
 * you run it but will never overwrite the concrete subclass.
 * </p>
 * 
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>Immutable</li>
 *     <li>Persistent</li>
 *     <li>SequenceKey</li>
 * </ul>
 * <p>
 * Class is read/write: true
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractBsSelf2 
    extends AbstractDto<com.poesys.db.test.ISelf2> {

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsSelf2 objects from a Collection parents2 of data-access-layer 
   * com.poesys.db.test.ISelf2 objects
   */
  private class BsParents2CollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<com.poesys.db.test.ISelf2, com.poesys.bs.test.BsSelf2> {
    @Override
    public com.poesys.bs.test.BsSelf2 get(com.poesys.db.test.ISelf2 dto) {
      return new com.poesys.bs.test.BsSelf2(dto);
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsSelf2 objects from a Collection children2 of data-access-layer 
   * com.poesys.db.test.ISelf2 objects
   */
  private class BsChildren2CollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<com.poesys.db.test.ISelf2, com.poesys.bs.test.BsSelf2> {
    @Override
    public com.poesys.bs.test.BsSelf2 get(com.poesys.db.test.ISelf2 dto) {
      return new com.poesys.bs.test.BsSelf2(dto);
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsSelf2Self objects from a Collection parents2Self2SelfLinks of data-access-layer 
   * com.poesys.db.test.ISelf2Self objects
   */
  private class BsParents2Self2SelfLinksCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<com.poesys.db.test.ISelf2Self, com.poesys.bs.test.BsSelf2Self> {
    @Override
    public com.poesys.bs.test.BsSelf2Self get(com.poesys.db.test.ISelf2Self dto) {
      return new com.poesys.bs.test.BsSelf2Self(dto);
    }
  }

  /**
   * A Collection builder helper class for building a business-layer Collection 
   * of BsSelf2Self objects from a Collection children2Self2SelfLinks of data-access-layer 
   * com.poesys.db.test.ISelf2Self objects
   */
  private class BsChildren2Self2SelfLinksCollectionBuilder 
      extends com.poesys.bs.dto.CollectionBuilder<com.poesys.db.test.ISelf2Self, com.poesys.bs.test.BsSelf2Self> {
    @Override
    public com.poesys.bs.test.BsSelf2Self get(com.poesys.db.test.ISelf2Self dto) {
      return new com.poesys.bs.test.BsSelf2Self(dto);
    }
  }

  /**
   * Create a BsSelf2 object from a Self2 object.
   * 
   * @param dto the data-access layer Self2 DTO
   * @throws DelegateException when there is a problem creating the Self2
   */
  public AbstractBsSelf2(ISelf2 dto) throws DelegateException {
    super(dto);
  }

  /**
   * Create a Self2 from new data.
   *
   * @param key the primary key of the Self2
   * @param self2Id primary key attribute
   */
  public AbstractBsSelf2(IPrimaryKey key, java.math.BigInteger self2Id) {
    super(new Self2Proxy(new Self2(key, self2Id)));
  }

  @SuppressWarnings("unchecked")
  @Override
  public boolean equals(Object arg0) {
    // Unchecked cast here
    IDto<ISelf2> other = (IDto<ISelf2>)arg0;
    return dto.equals(other.toDto());
  }

  @Override
  public int hashCode() {
    return dto.hashCode();
  }

  public int compareTo(IDto<ISelf2> o) {
    return dto.compareTo(o.toDto());
  }

  public void markChildrenDeleted() throws DtoStatusException {
    dto.markChildrenDeleted();
  }
  
  public IPrimaryKey getPrimaryKey() {
    return dto.getPrimaryKey();
  }

  // Data member properties

  /**
   * <p>
   * Primary key attribute
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is defined in the data-access object Self2</li>
   * </ul>
   * </p>
   * @return a java.math.BigInteger self2Id
   */
  public java.math.BigInteger getSelf2Id() {
    return dto.getSelf2Id();
  }

  /**
   * <p>
   * parent self2
   * </p>
   * <p>
   * Added by TransformToProperty + AddToManyAssociationCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Self2</li>
   * </ul>
   * </p>
   * @return a com.poesys.bs.test.BsSelf2 self2Id
   */
  public java.util.Collection<com.poesys.bs.test.BsSelf2> getParents2() {
    BsParents2CollectionBuilder builder = new BsParents2CollectionBuilder();
    return builder.getCollection(dto.getParents2());
  }

  /**
   * <p>
   * child self2
   * </p>
   * <p>
   * Added by TransformToProperty + AddToManyAssociationCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Self2</li>
   * </ul>
   * </p>
   * @return a com.poesys.bs.test.BsSelf2 self2Id
   */
  public java.util.Collection<com.poesys.bs.test.BsSelf2> getChildren2() {
    BsChildren2CollectionBuilder builder = new BsChildren2CollectionBuilder();
    return builder.getCollection(dto.getChildren2());
  }

  /**
   * <p>
   * Collection of association class objects (not the associated objects)
   * </p>
   * <p>
   * Added by AddAssociationClassCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Self2</li>
   * </ul>
   * </p>
   * @return a com.poesys.bs.test.BsSelf2Self self2Id
   */
  public java.util.Collection<com.poesys.bs.test.BsSelf2Self> getParents2Self2SelfLinks() {
    BsParents2Self2SelfLinksCollectionBuilder builder = new BsParents2Self2SelfLinksCollectionBuilder();
    return builder.getCollection(dto.getParents2Self2SelfLinks());
  }

  /**
   * <p>
   * Collection of association class objects (not the associated objects)
   * </p>
   * <p>
   * Added by AddAssociationClassCollectionProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object Self2</li>
   * </ul>
   * </p>
   * @return a com.poesys.bs.test.BsSelf2Self self2Id
   */
  public java.util.Collection<com.poesys.bs.test.BsSelf2Self> getChildren2Self2SelfLinks() {
    BsChildren2Self2SelfLinksCollectionBuilder builder = new BsChildren2Self2SelfLinksCollectionBuilder();
    return builder.getCollection(dto.getChildren2Self2SelfLinks());
  }
}