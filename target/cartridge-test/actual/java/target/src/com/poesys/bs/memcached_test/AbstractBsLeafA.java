/**
 * Copyright 2009 Poesys Associates. All rights reserved.
 */
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractBsDto.vsl


package com.poesys.bs.memcached_test;


import com.poesys.bs.delegate.DelegateException;
import com.poesys.bs.dto.IDto;
import com.poesys.db.dto.DtoStatusException;
import com.poesys.db.pk.IPrimaryKey;
import com.poesys.bs.dto.AbstractDto;


import com.poesys.db.memcached_test.ILeafA;
import com.poesys.db.memcached_test.LeafAProxy;
import com.poesys.db.memcached_test.LeafA;


/**
 * <p>
 * A business layer data-transfer object (DTO) for the LeafA. This class
 * is an abstract class that contains AndroMDA generated code; change nothing
 * in this class. Instead, override any methods in the concrete subclass
 * generated in the same package. AndroMDA will overwrite this class each time
 * you run it but will never overwrite the concrete subclass.
 * </p>
 * 
 * <p>
 * Stereotypes:
 * </p>
 * <ul>
 *     <li>Persistent</li>
 * </ul>
 * <p>
 * Class is read/write: true
 * </p>
 *
 * @author Poesys/DB Cartridge
 */
public abstract class AbstractBsLeafA 
    extends AbstractDto<com.poesys.db.memcached_test.ILeafA> {

  /**
   * Create a BsLeafA object from a LeafA object.
   * 
   * @param dto the data-access layer LeafA DTO
   * @throws DelegateException when there is a problem creating the LeafA
   */
  public AbstractBsLeafA(ILeafA dto) throws DelegateException {
    super(dto);
  }

  /**
   * Create a LeafA from new data.
   *
   * @param key the primary key of the LeafA
   * @param baseId primary key attribute
   * @param baseString 
   * @param middleString 
   * @param aString 
   */
  public AbstractBsLeafA(IPrimaryKey key, java.math.BigInteger baseId, java.lang.String baseString, java.lang.String middleString, java.lang.String aString) {
    super(new LeafAProxy(new LeafA(key, baseId, baseString, middleString, aString)));
  }

  @SuppressWarnings("unchecked")
  @Override
  public boolean equals(Object arg0) {
    // Unchecked cast here
    IDto<ILeafA> other = (IDto<ILeafA>)arg0;
    return dto.equals(other.toDto());
  }

  @Override
  public int hashCode() {
    return dto.hashCode();
  }

  public int compareTo(IDto<ILeafA> o) {
    return dto.compareTo(o.toDto());
  }

  public void markChildrenDeleted() throws DtoStatusException {
    dto.markChildrenDeleted();
  }
  
  public IPrimaryKey getPrimaryKey() {
    return dto.getPrimaryKey();
  }

  // Inherited properties

  /**
   * <p>
   * Primary key attribute
   * </p>
   * <p>
   * Added by AddGeneratedKeyProperties + AddInheritedKeyProperties + AddInheritedKeyProperties through inheritance
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: false</li>
   * <li>Property is inherited from a superclass</li>
   * </ul>
   * </p>
   * @return a java.math.BigInteger baseId
   */

  public java.math.BigInteger getBaseId() {
    return dto.getBaseId();
  }
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not true
// Read/Write property: false

  /**
   * 
   * <p>
   * Added by TransformToProperty + AddInheritedAttributeProperties through inheritance
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is inherited from a superclass</li>
   * </ul>
   * </p>
   * @return a java.lang.String baseString
   */

  public java.lang.String getBaseString() {
    return dto.getBaseString();
  }
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the baseString.
   * </p>
   * 
   * <p>
   * Added by TransformToProperty + AddInheritedAttributeProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is inherited from a superclass</li>
   * </ul>
   * </p>
   * @param baseString the value to set into the object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   */
  public void setBaseString(java.lang.String baseString) 
      throws com.poesys.db.dto.DtoStatusException{
    dto.setBaseString(baseString);
  }

  /**
   * 
   * <p>
   * Added by TransformToProperty + AddInheritedAttributeProperties through inheritance
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is inherited from a superclass</li>
   * </ul>
   * </p>
   * @return a java.lang.String middleString
   */

  public java.lang.String getMiddleString() {
    return dto.getMiddleString();
  }
// Setter here if the four conditions below are all true or not false
// Read/Write DTO: true
// Mutable DTO: not false
// Mutable property: not false
// Read/Write property: true

  /**
   * <p>
   * Set the middleString.
   * </p>
   * 
   * <p>
   * Added by TransformToProperty + AddInheritedAttributeProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is inherited from a superclass</li>
   * </ul>
   * </p>
   * @param middleString the value to set into the object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   */
  public void setMiddleString(java.lang.String middleString) 
      throws com.poesys.db.dto.DtoStatusException{
    dto.setMiddleString(middleString);
  }

  // Data member properties

  /**
   * 
   * <p>
   * Added by AddLocalAttributeProperties as data member
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object LeafA</li>
   * </ul>
   * </p>
   * @return a java.lang.String aString
   */
  public java.lang.String getAString() {
    return dto.getAString();
  }

  /**
   * <p>
   * Set the aString.
   * </p>
   * 
   * <p>
   * Added by AddLocalAttributeProperties
   * </p>
   * <p>
   * <ul>
   * <li>Property is read/write: true</li>
   * <li>Property is defined in the data-access object LeafA</li>
   * </ul>
   * </p>
   * @param aString the associated business object
   * @throws com.poesys.db.dto.DtoStatusException when the system can't set
   *                 the data-access status to CHANGED
   */
  public void setAString(java.lang.String aString) 
      throws com.poesys.db.dto.DtoStatusException {
    dto.setAString(aString);
  }
}