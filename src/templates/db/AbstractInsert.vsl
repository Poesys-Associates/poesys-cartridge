// license-header java merge-point
// Generated by AndroMDA Poesys/DB cartridge: DO NOT EDIT DIRECTLY.
// Template: AbstractInsert.vsl

## The main data-access data-transfer object (DTO)
#set ($dto = $class.transformToDto(null))
package ${dto.packageName}.sql;



import java.sql.PreparedStatement;
import java.sql.SQLException;

import com.poesys.db.dao.insert.IInsertSql;
import com.poesys.db.pk.IPrimaryKey;


#set($sep = "")
/**
 * SQL statement specification for inserting a ${dto.name}
 * 
 * @author Robert J. Muller
 */
public class AbstractInsert${dto.name} implements IInsertSql<${dto.packageName}.I${dto.name}> {
  private static final String SQL =
    "INSERT INTO ${dto.sqlTableName} (${dto.sqlInsertList}) VALUES (#foreach ($property in $dto.insertProperties)${sep}?#set($sep=",")#end)";

  public String getSql(IPrimaryKey key) {
    return SQL;
  }

  public void setParams(PreparedStatement stmt, int index, ${dto.packageName}.I${dto.name} object)
      throws SQLException {
#foreach ($property in $dto.insertProperties)
## Exclude any natural key columns, already set
#if (!$property.key)
#if (${property.supportedJdbcType})
    ${property.jdbcSetCall};
#else
    // Source ${property.source}
    // TODO Unsupported JDBC type ${property.typeName} for ${dto.name}.${property.uniqueName}; override this method in the concrete subclass to set the params for the $dto.name
#end
    index++;
#end
#end
  }
}
